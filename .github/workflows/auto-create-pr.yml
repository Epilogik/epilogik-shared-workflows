name: Auto Create PR

on:
  workflow_call:
    inputs:
      source_branch:
        description: 'Source branch for the PR'
        required: true
        type: string
      target_branch:
        description: 'Target branch for the PR'
        required: false
        type: string
        default: 'develop'
      pr_title_prefix:
        description: 'PR title prefix'
        required: false
        type: string
        default: '🔄 Auto'
      auto_merge:
        description: 'Enable auto-merge'
        required: false
        type: boolean
        default: false
      require_status_checks:
        description: 'Require status checks to pass'
        required: false
        type: boolean
        default: true
      delete_branch_after_merge:
        description: 'Delete source branch after merge'
        required: false
        type: boolean
        default: false
      reviewers:
        description: 'Comma-separated list of reviewers'
        required: false
        type: string
        default: ''
      team_reviewers:
        description: 'Comma-separated list of team reviewers'
        required: false
        type: string
        default: ''
      labels:
        description: 'Comma-separated list of labels'
        required: false
        type: string
        default: 'auto-generated'
    outputs:
      pr_number:
        description: 'Created PR number'
        value: ${{ jobs.create-pr.outputs.pr_number }}
      pr_url:
        description: 'Created PR URL'
        value: ${{ jobs.create-pr.outputs.pr_url }}
      pr_created:
        description: 'Whether a PR was created'
        value: ${{ jobs.create-pr.outputs.pr_created }}

jobs:
  create-pr:
    name: 🔄 Create Auto PR
    runs-on: ubuntu-latest
    outputs:
      pr_number: ${{ steps.result.outputs.pr_number }}
      pr_url: ${{ steps.result.outputs.pr_url }}
      pr_created: ${{ steps.result.outputs.pr_created }}

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🔍 Check branch differences
        id: branch-check
        uses: ./../../.github/actions/pr-automation/branch-check
        with:
          source_branch: ${{ inputs.source_branch }}
          target_branch: ${{ inputs.target_branch }}

      - name: 🔍 Check existing PR
        if: steps.branch-check.outputs.has_changes == 'true'
        id: pr-check
        uses: ./../../.github/actions/pr-automation/pr-check
        with:
          source_branch: ${{ inputs.source_branch }}
          target_branch: ${{ inputs.target_branch }}
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: 📝 Generate PR summary
        if: steps.branch-check.outputs.has_changes == 'true'
        id: summary
        uses: ./../../.github/actions/pr-automation/generate-summary
        with:
          source_branch: ${{ inputs.source_branch }}
          target_branch: ${{ inputs.target_branch }}

      - name: 🆕 Create new PR
        if: steps.branch-check.outputs.has_changes == 'true' && steps.pr-check.outputs.pr_exists == 'false'
        id: create-pr
        uses: ./../../.github/actions/pr-automation/create-pr
        with:
          source_branch: ${{ inputs.source_branch }}
          target_branch: ${{ inputs.target_branch }}
          pr_title_prefix: ${{ inputs.pr_title_prefix }}
          pr_body: ${{ steps.summary.outputs.pr_body }}
          labels: ${{ inputs.labels }}
          reviewers: ${{ inputs.reviewers }}
          team_reviewers: ${{ inputs.team_reviewers }}
          auto_merge: ${{ inputs.auto_merge }}
          require_status_checks: ${{ inputs.require_status_checks }}
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: 🔄 Update existing PR
        if: steps.branch-check.outputs.has_changes == 'true' && steps.pr-check.outputs.pr_exists == 'true'
        id: update-pr
        uses: ./../../.github/actions/pr-automation/update-pr
        with:
          pr_number: ${{ steps.pr-check.outputs.existing_pr_number }}
          commit_summary: ${{ steps.summary.outputs.commit_summary }}
          commit_count: ${{ steps.summary.outputs.commit_count }}
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: 📋 Set outputs
        id: result
        shell: bash
        run: |
          if [ "${{ steps.branch-check.outputs.has_changes }}" == "false" ]; then
            echo "pr_created=false" >> $GITHUB_OUTPUT
            echo "pr_number=" >> $GITHUB_OUTPUT
            echo "pr_url=" >> $GITHUB_OUTPUT
          elif [ "${{ steps.pr-check.outputs.pr_exists }}" == "true" ]; then
            echo "pr_created=false" >> $GITHUB_OUTPUT
            echo "pr_number=${{ steps.pr-check.outputs.existing_pr_number }}" >> $GITHUB_OUTPUT
            echo "pr_url=${{ steps.pr-check.outputs.existing_pr_url }}" >> $GITHUB_OUTPUT
          else
            echo "pr_created=true" >> $GITHUB_OUTPUT
            echo "pr_number=${{ steps.create-pr.outputs.pr_number }}" >> $GITHUB_OUTPUT
            echo "pr_url=${{ steps.create-pr.outputs.pr_url }}" >> $GITHUB_OUTPUT
          fi

      - name: 📋 Generate summary
        shell: bash
        run: |
          echo "## 🔄 Auto PR Summary" >> $GITHUB_STEP_SUMMARY
          echo "| Property | Value |" >> $GITHUB_STEP_SUMMARY
          echo "|----------|-------|" >> $GITHUB_STEP_SUMMARY
          echo "| Source Branch | \`${{ inputs.source_branch }}\` |" >> $GITHUB_STEP_SUMMARY
          echo "| Target Branch | \`${{ inputs.target_branch }}\` |" >> $GITHUB_STEP_SUMMARY
          echo "| Commits Ahead | ${{ steps.branch-check.outputs.ahead || '0' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Changes Detected | ${{ steps.branch-check.outputs.has_changes || 'false' }} |" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ steps.branch-check.outputs.has_changes }}" == "true" ]; then
            if [ "${{ steps.result.outputs.pr_created }}" == "true" ]; then
              echo "| PR Created | ✅ #${{ steps.result.outputs.pr_number }} |" >> $GITHUB_STEP_SUMMARY
            else
              echo "| PR Updated | ✅ #${{ steps.result.outputs.pr_number }} |" >> $GITHUB_STEP_SUMMARY
            fi
            echo "| Auto-merge | ${{ inputs.auto_merge }} |" >> $GITHUB_STEP_SUMMARY
          fi