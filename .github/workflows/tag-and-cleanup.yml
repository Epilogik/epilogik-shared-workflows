name: Tag and Cleanup Release

on:
  workflow_call:
    inputs:
      tag_prefix:
        description: 'Tag prefix (e.g., "v")'
        required: false
        type: string
        default: 'v'
      delete_release_branch:
        description: 'Delete release branch after tagging'
        required: false
        type: boolean
        default: true
      create_github_release:
        description: 'Create GitHub Release'
        required: false
        type: boolean
        default: true
      main_branch:
        description: 'Main branch name'
        required: false
        type: string
        default: 'main'
    outputs:
      tag_created:
        description: 'Whether a tag was created'
        value: ${{ jobs.tag-and-cleanup.outputs.tag_created }}
      tag_name:
        description: 'Created tag name'
        value: ${{ jobs.tag-and-cleanup.outputs.tag_name }}
      release_url:
        description: 'GitHub Release URL'
        value: ${{ jobs.tag-and-cleanup.outputs.release_url }}

jobs:
  tag-and-cleanup:
    runs-on: ubuntu-latest
    outputs:
      tag_created: ${{ steps.result.outputs.tag_created }}
      tag_name: ${{ steps.detect.outputs.next_tag }}
      release_url: ${{ steps.create-release.outputs.release_url }}
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🔍 Detect release
        id: detect
        uses: Epilogik/epilogik-shared-workflows/.github/actions/release-management/detect-release@main
        with:
          tag_prefix: ${{ inputs.tag_prefix }}

      - name: 🏷️ Check existing tag
        if: steps.detect.outputs.is_release == 'true'
        id: check-tag
        uses: Epilogik/epilogik-shared-workflows/.github/actions/release-management/check-tag@main
        with:
          tag_name: ${{ steps.detect.outputs.next_tag }}

      - name: 📝 Generate release notes
        if: steps.detect.outputs.is_release == 'true' && steps.check-tag.outputs.tag_exists == 'false'
        id: notes
        uses: Epilogik/epilogik-shared-workflows/actions/release-notes@v1
        with:
          format: 'markdown'
          group_by: 'type'

      - name: 🏷️ Create Git tag
        if: steps.detect.outputs.is_release == 'true' && steps.check-tag.outputs.tag_exists == 'false'
        uses: Epilogik/epilogik-shared-workflows/.github/actions/release-management/create-tag@main
        with:
          tag_name: ${{ steps.detect.outputs.next_tag }}

      - name: 🚀 Create GitHub release
        if: steps.detect.outputs.is_release == 'true' && steps.check-tag.outputs.tag_exists == 'false' && inputs.create_github_release
        id: create-release
        uses: Epilogik/epilogik-shared-workflows/.github/actions/release-management/create-release@main
        with:
          tag_name: ${{ steps.detect.outputs.next_tag }}
          version: ${{ steps.detect.outputs.version }}
          release_notes: ${{ steps.notes.outputs.release_notes }}
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: 🧹 Cleanup release branch
        if: steps.detect.outputs.is_release == 'true' && inputs.delete_release_branch
        uses: Epilogik/epilogik-shared-workflows/.github/actions/release-management/cleanup@main
        with:
          release_branch: ${{ steps.detect.outputs.release_branch }}
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: 📋 Set outputs
        id: result
        shell: bash
        run: |
          if [ "${{ steps.detect.outputs.is_release }}" == "true" ] && [ "${{ steps.check-tag.outputs.tag_exists }}" == "false" ]; then
            echo "tag_created=true" >> $GITHUB_OUTPUT
          else
            echo "tag_created=false" >> $GITHUB_OUTPUT
          fi

      - name: 📋 Generate summary
        if: steps.detect.outputs.is_release == 'true'
        shell: bash
        run: |
          echo "## 🎉 Release Summary" >> $GITHUB_STEP_SUMMARY
          echo "| Property | Value |" >> $GITHUB_STEP_SUMMARY
          echo "|----------|-------|" >> $GITHUB_STEP_SUMMARY
          echo "| Release Detected | ✅ |" >> $GITHUB_STEP_SUMMARY
          echo "| Version | ${{ steps.detect.outputs.version }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Tag | ${{ steps.detect.outputs.next_tag }} |" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ steps.check-tag.outputs.tag_exists }}" == "false" ]; then
            echo "| Tag Created | ✅ |" >> $GITHUB_STEP_SUMMARY
            if [ "${{ inputs.create_github_release }}" == "true" ]; then
              echo "| GitHub Release | ✅ |" >> $GITHUB_STEP_SUMMARY
            fi
            if [ "${{ inputs.delete_release_branch }}" == "true" ]; then
              echo "| Branch Cleanup | ✅ |" >> $GITHUB_STEP_SUMMARY
            fi
          else
            echo "| Tag Status | ⚠️ Already exists |" >> $GITHUB_STEP_SUMMARY
          fi

      - name: ℹ️ No release detected
        if: steps.detect.outputs.is_release == 'false'
        shell: bash
        run: |
          echo "## ℹ️ No Release Detected" >> $GITHUB_STEP_SUMMARY
          echo "Current commit is not a release merge - no action taken." >> $GITHUB_STEP_SUMMARY